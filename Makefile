##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.15.2] date: [Wed May 04 13:25:36 MSK 2022]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------
######################################
# include
######################################
-include make/build_verbosity.mk
-include make/version.mk
-include make/tools.mk
-include make/source.mk
-include make/includes.mk

######################################
# target
######################################
TARGET = energan_enb

######################################
# building variables
######################################
DEBUG = 1
OPT   = -O0

#######################################
# paths
#######################################
BUILD_DIR   = build
OUTPUT_DIR  = out
ASM_SOURCES = startup_stm32f217xx.s

######################################
# names
######################################
TARGET_BASENAME = $(addsuffix _$(VER), $(addprefix $(OUTPUT_DIR)/, $(TARGET) ) )
TARGET_ELF      = $(addsuffix .elf, $(TARGET_BASENAME) )
TARGET_BIN      = $(addsuffix .bin, $(TARGET_BASENAME) )
TARGET_HEX      = $(addsuffix .hex, $(TARGET_BASENAME) )
TARGET_ZIP      = $(addsuffix .zip, $(TARGET_BASENAME) )

#######################################
# binaris
#######################################
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

#######################################
# CFLAGS
#######################################
CPU = -mcpu=cortex-m3
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)
STD = -std=gnu11
AS_DEFS = 
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F217xx \
-DOPTIMIZ \
-DDEBUG \
-DETHERNET \
-DFATSD \
-DMEASUREMENT \
-DRTC_DEVICE_M41T62 \
-DUNIT_TEST 
-DUNITY_INCLUDE_CONFIG_H \
-DWRITE_LOG_TO_SD \
-DEXTERNAL_MAC

AS_INCLUDES = 

ASFLAGS = $(MCU) $(STD) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

#######################################
# LDFLAGS
#######################################
LDSCRIPT = STM32F217ZGTx_FLASH.ld
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

all: $(TARGET_ELF) $(TARGET_HEX) $(TARGET_BIN)

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	@echo "%% $(notdir $<)" "$(STDOUT)"
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	@echo "%% $(notdir $<)" "$(STDOUT)"
	$(AS) -c $(CFLAGS) $< -o $@

$(TARGET_ELF): $(OBJECTS) Makefile
	@echo make elf files...
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(TARGET_HEX): $(TARGET_ELF) | $(OUTPUT_DIR)
	@echo make hex file...
	$(HEX) $< $@
	
$(TARGET_BIN): $(TARGET_ELF) | $(OUTPUT_DIR)
	@echo make bin file...
	$(BIN) $< $@	

$(TARGET_ZIP): $(TARGET_HEX) | $(OUTPUT_DIR)
	@echo pack hex file to the zip...
	$(V1) zip $(TARGET_ZIP) $(TARGET_HEX)

$(OUTPUT_DIR):
	$(V1) mkdir $@		
	
$(BUILD_DIR):
	$(V1) mkdir $@		

$(REPORT_DIR):
	$(V1) mkdir $@

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

flash: $(TARGET_ELF)
    $(OPENOCD) -f stlink-v2.cfg -f stm32f2x.cfg -c "program $(TARGET_ELF) verify exit reset"	

zip:
	zip $(TARGET_ZIP) $(TARGET_HEX)	

cppcheck: $(SRCS) | $(REPORT_DIR)
	$(CPPCHECK) $(CHKFLAGS) $(TARGET_INCLUDE) $(GLOBAL_DEFINES) $(DEFINE) --output-file=$(CHKREPORT) $^

misra: $(SRCS) | $(REPORT_DIR)
	$(CPPCHECK) $(CHKMISRAFLAGS) $(GLOBAL_DEFINES) $(DEFINE) --output-file=$(CHKMISRAREPORT) $^

#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***